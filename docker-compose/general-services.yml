version: '3'

services:
  microbin:
    container_name: microbin
    image: danielszabo99/microbin:latest
    restart: unless-stopped
    volumes:
     - ./microbin-data:/app/microbin_data
    labels:
      - traefik.http.routers.microbin.rule=Host(`microbin.christopherenea.net`)
      - traefik.http.routers.microbin.tls=true
      - traefik.http.routers.microbin.tls.certresolver=myresolver
      - traefik.port=443
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - traefik
    environment:
      TZ: America/Detroit

  # https://www.reddit.com/r/selfhosted/comments/wil8mk/comment/ijdcwnw/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - watchtower/config.json:/config.json
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - traefik
    environment:
      TZ: America/Detroit
      # will stop your image reg having every version it downloads so it will just keep the latest one and delete the old ones.
      WATCHTOWER_CLEANUP: true
      # 43200 seconds which is 12 hours
      # 604800 seconds which is 7 days
      WATCHTOWER_POLL_INTERVAL: 604800
      # will restart the container when the new image has been downloaded
      WATCHTOWER_INCLUDE_RESTARTING: true
      # will only update stacks that have label in the stack
      # any container without this label will not update
      WATCHTOWER_LABEL_ENABLE: true
      WATCHTOWER_NOTIFICATION_REPORT: true
      WATCHTOWER_NOTIFICATION_URL: ${WATCHTOWER_NOTIFICATION_URL}
      WATCHTOWER_NOTIFICATION_TEMPLATE: |
        {{- if .Report -}}
          {{- with .Report -}}
        {{len .Scanned}} Scanned, {{len .Updated}} Updated, {{len .Failed}} Failed
              {{- range .Updated}}
        - {{.Name}} ({{.ImageName}}): {{.CurrentImageID.ShortID}} updated to {{.LatestImageID.ShortID}}
              {{- end -}}
              {{- range .Fresh}}
        - {{.Name}} ({{.ImageName}}): {{.State}}
            {{- end -}}
            {{- range .Skipped}}
        - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
            {{- end -}}
            {{- range .Failed}}
        - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
            {{- end -}}
          {{- end -}}
        {{- else -}}
          {{range .Entries -}}{{.Message}}{{"\n"}}{{- end -}}
        {{- end -}}

  it-tools:
    image: corentinth/it-tools:latest
    restart: unless-stopped
    labels:
      # traefik
      - traefik.http.routers.ittools.rule=Host(`ittools.christopherenea.net`)
      - traefik.http.routers.ittools.tls=true
      - traefik.port=443
      - traefik.http.routers.ittools.tls.certresolver=myresolver
    networks:
      - traefik

networks:
  traefik:
    name: traefik
    external: true

volumes:
  watchtower:
