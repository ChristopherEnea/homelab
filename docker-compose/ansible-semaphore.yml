version: '3'

services:
  mysql:
    restart: unless-stopped
    image: mysql:8.0
    hostname: mysql
    volumes:
      - semaphore-mysql:/var/lib/mysql
      # must mount time paths in order for time to be correct in container
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_DATABASE: semaphore
      MYSQL_USER: semaphore
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - default
    labels:
      - com.centurylinklabs.watchtower.enable=true

  semaphore:
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    restart: unless-stopped
    image: semaphoreui/semaphore:latest
    environment:
      SEMAPHORE_DB_USER: semaphore
      SEMAPHORE_DB_PASS: ${SEMAPHORE_DB_PASS}
      SEMAPHORE_DB_HOST: mysql
      SEMAPHORE_DB_PORT: 3306 
      SEMAPHORE_DB_DIALECT: mysql
      SEMAPHORE_DB: semaphore
      SEMAPHORE_PLAYBOOK_PATH: /tmp/semaphore/
      SEMAPHORE_ADMIN_PASSWORD: ${SEMAPHORE_ADMIN_PASSWORD}
      SEMAPHORE_ADMIN_NAME: admin
      SEMAPHORE_ADMIN_EMAIL: admin@localhost
      SEMAPHORE_ADMIN: admin
      SEMAPHORE_ACCESS_KEY_ENCRYPTION: ${SEMAPHORE_ACCESS_KEY_ENCRYPTION}
      ANSIBLE_HOST_KEY_CHECKING: False
    depends_on:
      - mysql
    volumes:
      - ./inventory/:/inventory:ro
      - ./authorized-keys/:/authorized-keys:ro
      # must mount time paths in order for time to be correct in container
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    labels:
      # traefik
      - traefik.http.routers.semaphore.rule=Host(`semaphore.christopherenea.net`)
      - traefik.http.routers.semaphore.tls=true
      - traefik.http.services.semaphore.loadbalancer.server.port=3000
      - traefik.http.routers.semaphore.tls.certresolver=myresolver
      - traefik.port=443
      - traefik.docker.network=traefik # required to get semaphore to work with traefik
      # watchtower
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - traefik
      - default

  backup:
    image: offen/docker-volume-backup:v2
    restart: unless-stopped
    environment:
      AWS_ENDPOINT: ${AWS_ENDPOINT}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      BACKUP_CRON_EXPRESSION: "10 2 * * *"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - semaphore-mysql:/backup/semaphore-backup:ro

networks:
  traefik:
    name: traefik
    external: true

volumes:
  semaphore-mysql:

# env vars (db passwords should be the same):
# MYSQL_PASSWORD
# SEMAPHORE_DB_PASS
# SEMAPHORE_ADMIN_PASSWORD
# SEMAPHORE_ACCESS_KEY_ENCRYPTION
# AWS_ENDPOINT
# AWS_S3_BUCKET_NAME
# AWS_ACCESS_KEY_ID
# AWS_SECRET_ACCESS_KEY